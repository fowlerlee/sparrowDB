use buffer::bufferpoolmanager::BufferPoolManager;
use buffer::catalog::Catalog;
use buffer::query_types::{get_demo_schema, get_demo_table_heap_with_n_page_m_tuples_each, Tuple};
use common::transaction::Transaction;
use std::sync::{Arc, Mutex};

use std::io::{self, Write};

#[allow(dead_code)]
enum Statements {
    SELECT(String),
    CREATE(String),
}

fn main() {
    print!("start-up");
    println!(
        r#"
::::::::::::::::::::::::::::::::::::::::::::.....::::....................:::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::.......................:::::::..........:::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::.......................:::::::::.........:::::::::::::::::::::::
::::::::::::::::::::::::..:::::::.............................:::::............:::::::::::::::::::::
::::::::::::::::::::::::..................=@@@@@@@@@%..........................:::::::::::::::::::::
::::::::::::::::::::::::...............@@@@@@.....#@@@@:.......................:::::::::::::::::::::
::::::::::::::::::::::::.............@@@@... @@@@@....@@@................:......:::.....::::::::::::
:::::::::::::::::::::::............@@@@..@@@@@@@.@@@..@@@...............::::......::::.....:::::::::
::::::::::::::::::::::............@@@-*@@@#..@@@@@@#.@@@@@@.......................:::::...::::::::::
::::::::::::::::::::::..........@@@...@@.......@@@..@@@..%@@.......................::::...::::::::::
:::::::::::::::::::::.........@@@@....#@......@@@....%@@@@@@.............................:::::::::::
::::::::::::::::.............@@@.....-%@=....@@@....@@@..@@...............................::::::::::
:::::::::::::::::..........+@@+..@@@@@@@@@@@@@..@@.@@@..........................................::::
::::::::::::::::::........@@@.@@@@.........@@@:.@@.@@@.........................................:::::
:::::::::::::::::........@@@...@@@@#.........@@=.@.@@@..==:-=++++=++==+++=.....................:::::
:::::::::::::...........@@@.@@%.......@@..@@.@@@...@@@..:@@@@@@@@@@@@@@@@@@@@@@@@@@+..............::
::::::::::::...........@@@...-@@@..@@...@....=@@...@@#..+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@............:
:::::::::::..........:@@-.@@@@@.........%....@@@..:@@...@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@..........
:::::::::::......... @@+........ @@..@@+.@@..@@...@@@.......:::@@@@@@@:::::::::.:@@@@@@@@@@@........
::::::::::::........@@@.@@@@................@@@..+@@........::::.@@@@@@::::.......:.%@@@@@@@@@......
::::::::::::.......@@@.@......@@.....@@:...@@@...@@...............-@@@@@@:..........:..@@@@@@@@.....
::::::::::.........@@.:@@..@@.....@@......@@@...@@=.................@@@@@@@.........::::-@@@@@@@....
::::::::::........@@@.-:......@@-.......@@@:..=@@@..@...............:.@@@@@@.........:....@@@@@@@...
::::::::::.......:@@..@@...@......@...:@@@...@@@+..@@..................@@@@@@..............@@@@@@@..
:::::::::........@@@......:@:.......@@@@@...@@@...@@@...................@@@@@@.............@@@@@@@..
::::::::.........@@..@@@........-@@@@@@+..*@@@...@@@@....................@@@@@@.............@@@@@@..
::::::::........@@@.@@+.....@@@@@@@@@@...%@@@..@@@@@@.....................@@@@@=............@@@@@@..
::::::::........@@@@@%@@@@@@@@..@@@@@...@@@....@@@@@@.....................@@@@@@...........-@@@@@@..
:::::::::.......@@@@@@@@@@@@..@@@@@:...@@@.....@@@@@@.....................-@@@@@...........@@@@@@@..
:::::::::.......@@@-+@@@@@..@@@@@@....@@@......@@@@@@......................@@@@@*.........*@@@@@@#..
:::::::::......@@@.@@*@@@..@@:@@*....@@@.......@@@@@@......................@@@@@@........:@@@@@@@:..
:::::::.......@@@.@@.@@@.=@@.@@@...@@@@........@@@@@@......................@@@@@@.......@@@@@@@@....
:::::::......@@@:@=-@@..@@@@@@@@@@@@@@@@@......@@@@@@......................+@@@@@.....@@@@@@@@@.....
::::::......@@@:#:@@@.:@@*@@..@@.@@...@@@@.................................=@@@@@..@@@@@@@@@@.......
::::........@@:.+@@..@@%@@@..@@@........@@@@@@@@@@@........................:@@@@@@@@@@@@@@@.........
::.........@@@.@@@..@@@@@....@@#.......@@@@@@@@@@@@@.... @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:...........
::........@@@.@@..@@@@@......@@.....@@@@.....#@@@@@@@....@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#...........
::........@@@@@..@@@@@..@@@..@@....@@@:........@@@@@@....@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.........
::.......@@@@*.@@@@@@@..@@@..@@....*@@.........@@@@@@...........::::.:::::::@@@@@-*@@@@@@@@@@+......
........@@@.. @@@@.@@#..@@..-@@.....@@@........@@@@@@.......................@@@@@+....@@@@@@@@@.....
.......@@@..@@@@..#@@..=@@..@@@................@@@@@@.......................@@@@@@......@@@@@@@@+...
......-@@.@@@@@..@@@@..@@@..@@@................@@@@@@:......................@@@@@@........@@@@@@@#..
......@@@@@@@@.@@@@@@..@@@..@@-................@@@@@@:......................%@@@@@.........@@@@@@@..
.....@@@@@@@@.@@@.@@%..@@...@@.................@@@@@@:......................@@@@@@..........@@@@@@@.
....@@@@..@@:@@*..@@...@@:..@@.................@@@@@@:......................@@@@@#...........@@@@@@.
....@....@@@@@....@@..@@@...@@.................@@@@@@:......................@@@@@:...........@@@@@@@
........#@@@:....@@@..@@@..#@@.................@@@@@@:......................@@@@@:...........@@@@@@@
........@@*......@@@..@@-..@@@.................@@@@@@:.....................@@@@@@:...........@@@@@@@
.................@@...@@...@@@.................@@@@@@:....................@@@@@@............:@@@@@@@
:::..............@@..@@@...@@#.................@@@@@@:...................@@@@@@.............-@@@@@@.
:::.............@@@..@@@...@@..................@@@@@@:..................@@@@@@..............@@@@@@@.
::..............@@=..@@-...@@..................@@@@@@:................@@@@@@*..............@@@@@@@:.
:::.............@@...@@...@@@..................@@@@@@:..............@@@@@@@...............@@@@@@@@..
:::::..........@@@..%@@..@@@...................@@@@@@............@@@@@@@@................@@@@@@@@...
:::::::........@@@..@@@:@@@....................@@@@@@........@@@@@@@@@.................@@@@@@@@=....
::::::.........@@:..@@@@@@.....................@@@@@@.....=@@@@@@@..................@@@@@@@@@@......
:::::::........@@..:@@@@@......................@@@@@@..#@@@@@@@................:*@@@@@@@@@@@:.......
:::::::.......+@@..@@.:@@......................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@..........
::::::::......-@@.%@@..........................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@............
::::::::.......@@.@@...........................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=................
:::::::::......@@@@@...........................@@@@@@@@@@@@@@@@@@@@@@@@@@@%-..:.....................
::::::::::.....@@@@.........................................::.....::::::...........................
::::::::::.....@@@.................:::..............................................................
:::::::::::....=@@..........:::::::::::::..............................................::::::::::::.
::::::::::::............:::::::::::::::::::...............................:::::::....:::::::::::::::
:::::::::::::.............:::::::::::::::::..............................:::::::::::::::::::::::::::
:::::::::::::::..........:::::::::::::::::::.....................:.......:::...:::::::::::::::::::::
::::::::::::::::..:::::::::::::::::::...::::::..........:::......::::..:::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::.......::::::::::::::::..:::::::::::::::::::::::::::::

         KestrelDB
"#
    );
    println!("Enter a command (SELECT, CREATE, or EXIT to quit):");

    loop {
        print!("> ");
        io::stdout().flush().unwrap();

        let mut input = String::new();
        io::stdin().read_line(&mut input).unwrap();
        let input = input.trim().to_uppercase();

        let mut bpm = BufferPoolManager::new(10, 2);
        bpm.table_heap = get_demo_table_heap_with_n_page_m_tuples_each(10, 10);
        let mut catalog = Arc::new(Mutex::new(Catalog::new()));
        catalog.lock().unwrap().bpm = bpm;
        let fake = Arc::clone(&catalog);

        match input.as_str() {
            "dt" => show_table(fake),
            "SELECT" => handle_select(fake),
            "CREATE" => handle_create(fake),
            "EXIT" => {
                println!("Goodbye from KestrelDB!");
                break;
            }
            _ => println!("Unknown command. Try SELECT, CREATE, or EXIT."),
        }
    }
}

fn show_table(catalog: Arc<Mutex<Catalog>>) {
    let guard = catalog.lock().unwrap();
    guard.get_table(None);
}

fn handle_select(catalog: Arc<Mutex<Catalog>>) {
    let guard = catalog.lock().unwrap();
    println!(
        "{:?}",
        guard
            .bpm
            .table_heap
            .data
            .iter()
            .flat_map(|table| table.data.clone())
            .collect::<Vec<Tuple>>()
    )
}

fn handle_create(catalog: Arc<Mutex<Catalog>>) {
    let transaction = Transaction::new();
    let table_name = "Apple".to_string();
    let schema = get_demo_schema();
    let mut guard = catalog.lock().unwrap();
    let table_info = guard.create_table(transaction, table_name, schema, true);
    println!("{:?}", table_info);
}
